var e="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:global;var n={};(function(e,t){t(n)})(n,(function(n){function defaultSeparation(e,n){return e.parent===n.parent?1:2}function meanX(e){return e.reduce(meanXReduce,0)/e.length}function meanXReduce(e,n){return e+n.x}function maxY(e){return 1+e.reduce(maxYReduce,0)}function maxYReduce(e,n){return Math.max(e,n.y)}function leafLeft(e){var n;while(n=e.children)e=n[0];return e}function leafRight(e){var n;while(n=e.children)e=n[n.length-1];return e}function cluster(){var e=defaultSeparation,n=1,t=1,r=false;function cluster(i){var a,o=0;i.eachAfter((function(n){var t=n.children;if(t){n.x=meanX(t);n.y=maxY(t)}else{n.x=a?o+=e(n,a):0;n.y=0;a=n}}));var u=leafLeft(i),c=leafRight(i),l=u.x-e(u,c)/2,s=c.x+e(c,u)/2;return i.eachAfter(r?function(e){e.x=(e.x-i.x)*n;e.y=(i.y-e.y)*t}:function(e){e.x=(e.x-l)/(s-l)*n;e.y=(1-(i.y?e.y/i.y:1))*t})}cluster.separation=function(n){return arguments.length?(e=n,cluster):e};cluster.size=function(e){return arguments.length?(r=false,n=+e[0],t=+e[1],cluster):r?null:[n,t]};cluster.nodeSize=function(e){return arguments.length?(r=true,n=+e[0],t=+e[1],cluster):r?[n,t]:null};return cluster}function count(e){var n=0,t=e.children,r=t&&t.length;if(r)while(--r>=0)n+=t[r].value;else n=1;e.value=n}function node_count(){return this.eachAfter(count)}function node_each(n){var t=this||e,r,i=[t],a,o,u;do{r=i.reverse(),i=[];while(t=r.pop()){n(t),a=t.children;if(a)for(o=0,u=a.length;o<u;++o)i.push(a[o])}}while(i.length);return this||e}function node_eachBefore(n){var t=this||e,r=[t],i,a;while(t=r.pop()){n(t),i=t.children;if(i)for(a=i.length-1;a>=0;--a)r.push(i[a])}return this||e}function node_eachAfter(n){var t=this||e,r=[t],i=[],a,o,u;while(t=r.pop()){i.push(t),a=t.children;if(a)for(o=0,u=a.length;o<u;++o)r.push(a[o])}while(t=i.pop())n(t);return this||e}function node_sum(e){return this.eachAfter((function(n){var t=+e(n.data)||0,r=n.children,i=r&&r.length;while(--i>=0)t+=r[i].value;n.value=t}))}function node_sort(e){return this.eachBefore((function(n){n.children&&n.children.sort(e)}))}function node_path(n){var t=this||e,r=leastCommonAncestor(t,n),i=[t];while(t!==r){t=t.parent;i.push(t)}var a=i.length;while(n!==r){i.splice(a,0,n);n=n.parent}return i}function leastCommonAncestor(e,n){if(e===n)return e;var t=e.ancestors(),r=n.ancestors(),i=null;e=t.pop();n=r.pop();while(e===n){i=e;e=t.pop();n=r.pop()}return i}function node_ancestors(){var n=this||e,t=[n];while(n=n.parent)t.push(n);return t}function node_descendants(){var e=[];this.each((function(n){e.push(n)}));return e}function node_leaves(){var e=[];this.eachBefore((function(n){n.children||e.push(n)}));return e}function node_links(){var n=this||e,t=[];n.each((function(e){e!==n&&t.push({source:e.parent,target:e})}));return t}function hierarchy(e,n){var t=new Node(e),r=+e.value&&(t.value=e.value),i,a=[t],o,u,c,l;null==n&&(n=defaultChildren);while(i=a.pop()){r&&(i.value=+i.data.value);if((u=n(i.data))&&(l=u.length)){i.children=new Array(l);for(c=l-1;c>=0;--c){a.push(o=i.children[c]=new Node(u[c]));o.parent=i;o.depth=i.depth+1}}}return t.eachBefore(computeHeight)}function node_copy(){return hierarchy(this||e).eachBefore(copyData)}function defaultChildren(e){return e.children}function copyData(e){e.data=e.data.data}function computeHeight(e){var n=0;do{e.height=n}while((e=e.parent)&&e.height<++n)}function Node(n){(this||e).data=n;(this||e).depth=(this||e).height=0;(this||e).parent=null}Node.prototype=hierarchy.prototype={constructor:Node,count:node_count,each:node_each,eachAfter:node_eachAfter,eachBefore:node_eachBefore,sum:node_sum,sort:node_sort,path:node_path,ancestors:node_ancestors,descendants:node_descendants,leaves:node_leaves,links:node_links,copy:node_copy};var t=Array.prototype.slice;function shuffle(e){var n=e.length,t,r;while(n){r=Math.random()*n--|0;t=e[n];e[n]=e[r];e[r]=t}return e}function enclose(e){var n=0,r=(e=shuffle(t.call(e))).length,i=[],a,o;while(n<r){a=e[n];o&&enclosesWeak(o,a)?++n:(o=encloseBasis(i=extendBasis(i,a)),n=0)}return o}function extendBasis(e,n){var t,r;if(enclosesWeakAll(n,e))return[n];for(t=0;t<e.length;++t)if(enclosesNot(n,e[t])&&enclosesWeakAll(encloseBasis2(e[t],n),e))return[e[t],n];for(t=0;t<e.length-1;++t)for(r=t+1;r<e.length;++r)if(enclosesNot(encloseBasis2(e[t],e[r]),n)&&enclosesNot(encloseBasis2(e[t],n),e[r])&&enclosesNot(encloseBasis2(e[r],n),e[t])&&enclosesWeakAll(encloseBasis3(e[t],e[r],n),e))return[e[t],e[r],n];throw new Error}function enclosesNot(e,n){var t=e.r-n.r,r=n.x-e.x,i=n.y-e.y;return t<0||t*t<r*r+i*i}function enclosesWeak(e,n){var t=e.r-n.r+1e-6,r=n.x-e.x,i=n.y-e.y;return t>0&&t*t>r*r+i*i}function enclosesWeakAll(e,n){for(var t=0;t<n.length;++t)if(!enclosesWeak(e,n[t]))return false;return true}function encloseBasis(e){switch(e.length){case 1:return encloseBasis1(e[0]);case 2:return encloseBasis2(e[0],e[1]);case 3:return encloseBasis3(e[0],e[1],e[2])}}function encloseBasis1(e){return{x:e.x,y:e.y,r:e.r}}function encloseBasis2(e,n){var t=e.x,r=e.y,i=e.r,a=n.x,o=n.y,u=n.r,c=a-t,l=o-r,s=u-i,f=Math.sqrt(c*c+l*l);return{x:(t+a+c/f*s)/2,y:(r+o+l/f*s)/2,r:(f+i+u)/2}}function encloseBasis3(e,n,t){var r=e.x,i=e.y,a=e.r,o=n.x,u=n.y,c=n.r,l=t.x,s=t.y,f=t.r,h=r-o,p=r-l,d=i-u,y=i-s,x=c-a,v=f-a,m=r*r+i*i-a*a,g=m-o*o-u*u+c*c,w=m-l*l-s*s+f*f,_=p*d-h*y,B=(d*w-y*g)/(2*_)-r,k=(y*x-d*v)/_,N=(p*g-h*w)/(2*_)-i,A=(h*v-p*x)/_,q=k*k+A*A-1,z=2*(a+B*k+N*A),S=B*B+N*N-a*a,M=-(q?(z+Math.sqrt(z*z-4*q*S))/(2*q):S/z);return{x:r+B+k*M,y:i+N+A*M,r:M}}function place(e,n,t){var r=e.x-n.x,i,a,o=e.y-n.y,u,c,l=r*r+o*o;if(l){a=n.r+t.r,a*=a;c=e.r+t.r,c*=c;if(a>c){i=(l+c-a)/(2*l);u=Math.sqrt(Math.max(0,c/l-i*i));t.x=e.x-i*r-u*o;t.y=e.y-i*o+u*r}else{i=(l+a-c)/(2*l);u=Math.sqrt(Math.max(0,a/l-i*i));t.x=n.x+i*r-u*o;t.y=n.y+i*o+u*r}}else{t.x=n.x+t.r;t.y=n.y}}function intersects(e,n){var t=e.r+n.r-1e-6,r=n.x-e.x,i=n.y-e.y;return t>0&&t*t>r*r+i*i}function score(e){var n=e._,t=e.next._,r=n.r+t.r,i=(n.x*t.r+t.x*n.r)/r,a=(n.y*t.r+t.y*n.r)/r;return i*i+a*a}function Node$1(n){(this||e)._=n;(this||e).next=null;(this||e).previous=null}function packEnclose(e){if(!(i=e.length))return 0;var n,t,r,i,a,o,u,c,l,s,f;n=e[0],n.x=0,n.y=0;if(!(i>1))return n.r;t=e[1],n.x=-t.r,t.x=n.r,t.y=0;if(!(i>2))return n.r+t.r;place(t,n,r=e[2]);n=new Node$1(n),t=new Node$1(t),r=new Node$1(r);n.next=r.previous=t;t.next=n.previous=r;r.next=t.previous=n;e:for(u=3;u<i;++u){place(n._,t._,r=e[u]),r=new Node$1(r);c=t.next,l=n.previous,s=t._.r,f=n._.r;do{if(s<=f){if(intersects(c._,r._)){t=c,n.next=t,t.previous=n,--u;continue e}s+=c._.r,c=c.next}else{if(intersects(l._,r._)){n=l,n.next=t,t.previous=n,--u;continue e}f+=l._.r,l=l.previous}}while(c!==l.next);r.previous=n,r.next=t,n.next=t.previous=t=r;a=score(n);while((r=r.next)!==t)(o=score(r))<a&&(n=r,a=o);t=n.next}n=[t._],r=t;while((r=r.next)!==t)n.push(r._);r=enclose(n);for(u=0;u<i;++u)n=e[u],n.x-=r.x,n.y-=r.y;return r.r}function siblings(e){packEnclose(e);return e}function optional(e){return null==e?null:required(e)}function required(e){if("function"!==typeof e)throw new Error;return e}function constantZero(){return 0}function constant(e){return function(){return e}}function defaultRadius(e){return Math.sqrt(e.value)}function index(){var e=null,n=1,t=1,r=constantZero;function pack(i){i.x=n/2,i.y=t/2;e?i.eachBefore(radiusLeaf(e)).eachAfter(packChildren(r,.5)).eachBefore(translateChild(1)):i.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildren(constantZero,1)).eachAfter(packChildren(r,i.r/Math.min(n,t))).eachBefore(translateChild(Math.min(n,t)/(2*i.r)));return i}pack.radius=function(n){return arguments.length?(e=optional(n),pack):e};pack.size=function(e){return arguments.length?(n=+e[0],t=+e[1],pack):[n,t]};pack.padding=function(e){return arguments.length?(r="function"===typeof e?e:constant(+e),pack):r};return pack}function radiusLeaf(e){return function(n){n.children||(n.r=Math.max(0,+e(n)||0))}}function packChildren(e,n){return function(t){if(r=t.children){var r,i,a=r.length,o=e(t)*n||0,u;if(o)for(i=0;i<a;++i)r[i].r+=o;u=packEnclose(r);if(o)for(i=0;i<a;++i)r[i].r-=o;t.r=u+o}}}function translateChild(e){return function(n){var t=n.parent;n.r*=e;if(t){n.x=t.x+e*n.x;n.y=t.y+e*n.y}}}function roundNode(e){e.x0=Math.round(e.x0);e.y0=Math.round(e.y0);e.x1=Math.round(e.x1);e.y1=Math.round(e.y1)}function treemapDice(e,n,t,r,i){var a=e.children,o,u=-1,c=a.length,l=e.value&&(r-n)/e.value;while(++u<c){o=a[u],o.y0=t,o.y1=i;o.x0=n,o.x1=n+=o.value*l}}function partition(){var e=1,n=1,t=0,r=false;function partition(i){var a=i.height+1;i.x0=i.y0=t;i.x1=e;i.y1=n/a;i.eachBefore(positionNode(n,a));r&&i.eachBefore(roundNode);return i}function positionNode(e,n){return function(r){r.children&&treemapDice(r,r.x0,e*(r.depth+1)/n,r.x1,e*(r.depth+2)/n);var i=r.x0,a=r.y0,o=r.x1-t,u=r.y1-t;o<i&&(i=o=(i+o)/2);u<a&&(a=u=(a+u)/2);r.x0=i;r.y0=a;r.x1=o;r.y1=u}}partition.round=function(e){return arguments.length?(r=!!e,partition):r};partition.size=function(t){return arguments.length?(e=+t[0],n=+t[1],partition):[e,n]};partition.padding=function(e){return arguments.length?(t=+e,partition):t};return partition}var r="$",i={depth:-1},a={};function defaultId(e){return e.id}function defaultParentId(e){return e.parentId}function stratify(){var e=defaultId,n=defaultParentId;function stratify(t){var o,u,c=t.length,l,s,f,h=new Array(c),p,d,y={};for(u=0;u<c;++u){o=t[u],f=h[u]=new Node(o);if(null!=(p=e(o,u,t))&&(p+="")){d=r+(f.id=p);y[d]=d in y?a:f}}for(u=0;u<c;++u){f=h[u],p=n(t[u],u,t);if(null!=p&&(p+="")){s=y[r+p];if(!s)throw new Error("missing: "+p);if(s===a)throw new Error("ambiguous: "+p);s.children?s.children.push(f):s.children=[f];f.parent=s}else{if(l)throw new Error("multiple roots");l=f}}if(!l)throw new Error("no root");l.parent=i;l.eachBefore((function(e){e.depth=e.parent.depth+1;--c})).eachBefore(computeHeight);l.parent=null;if(c>0)throw new Error("cycle");return l}stratify.id=function(n){return arguments.length?(e=required(n),stratify):e};stratify.parentId=function(e){return arguments.length?(n=required(e),stratify):n};return stratify}function defaultSeparation$1(e,n){return e.parent===n.parent?1:2}function nextLeft(e){var n=e.children;return n?n[0]:e.t}function nextRight(e){var n=e.children;return n?n[n.length-1]:e.t}function moveSubtree(e,n,t){var r=t/(n.i-e.i);n.c-=r;n.s+=t;e.c+=r;n.z+=t;n.m+=t}function executeShifts(e){var n=0,t=0,r=e.children,i=r.length,a;while(--i>=0){a=r[i];a.z+=n;a.m+=n;n+=a.s+(t+=a.c)}}function nextAncestor(e,n,t){return e.a.parent===n.parent?e.a:t}function TreeNode(n,t){(this||e)._=n;(this||e).parent=null;(this||e).children=null;(this||e).A=null;(this||e).a=this||e;(this||e).z=0;(this||e).m=0;(this||e).c=0;(this||e).s=0;(this||e).t=null;(this||e).i=t}TreeNode.prototype=Object.create(Node.prototype);function treeRoot(e){var n=new TreeNode(e,0),t,r=[n],i,a,o,u;while(t=r.pop())if(a=t._.children){t.children=new Array(u=a.length);for(o=u-1;o>=0;--o){r.push(i=t.children[o]=new TreeNode(a[o],o));i.parent=t}}(n.parent=new TreeNode(null,0)).children=[n];return n}function tree(){var e=defaultSeparation$1,n=1,t=1,r=null;function tree(i){var a=treeRoot(i);a.eachAfter(firstWalk),a.parent.m=-a.z;a.eachBefore(secondWalk);if(r)i.eachBefore(sizeNode);else{var o=i,u=i,c=i;i.eachBefore((function(e){e.x<o.x&&(o=e);e.x>u.x&&(u=e);e.depth>c.depth&&(c=e)}));var l=o===u?1:e(o,u)/2,s=l-o.x,f=n/(u.x+l+s),h=t/(c.depth||1);i.eachBefore((function(e){e.x=(e.x+s)*f;e.y=e.depth*h}))}return i}function firstWalk(n){var t=n.children,r=n.parent.children,i=n.i?r[n.i-1]:null;if(t){executeShifts(n);var a=(t[0].z+t[t.length-1].z)/2;if(i){n.z=i.z+e(n._,i._);n.m=n.z-a}else n.z=a}else i&&(n.z=i.z+e(n._,i._));n.parent.A=apportion(n,i,n.parent.A||r[0])}function secondWalk(e){e._.x=e.z+e.parent.m;e.m+=e.parent.m}function apportion(n,t,r){if(t){var i=n,a=n,o=t,u=i.parent.children[0],c=i.m,l=a.m,s=o.m,f=u.m,h;while(o=nextRight(o),i=nextLeft(i),o&&i){u=nextLeft(u);a=nextRight(a);a.a=n;h=o.z+s-i.z-c+e(o._,i._);if(h>0){moveSubtree(nextAncestor(o,n,r),n,h);c+=h;l+=h}s+=o.m;c+=i.m;f+=u.m;l+=a.m}if(o&&!nextRight(a)){a.t=o;a.m+=s-l}if(i&&!nextLeft(u)){u.t=i;u.m+=c-f;r=n}}return r}function sizeNode(e){e.x*=n;e.y=e.depth*t}tree.separation=function(n){return arguments.length?(e=n,tree):e};tree.size=function(e){return arguments.length?(r=false,n=+e[0],t=+e[1],tree):r?null:[n,t]};tree.nodeSize=function(e){return arguments.length?(r=true,n=+e[0],t=+e[1],tree):r?[n,t]:null};return tree}function treemapSlice(e,n,t,r,i){var a=e.children,o,u=-1,c=a.length,l=e.value&&(i-t)/e.value;while(++u<c){o=a[u],o.x0=n,o.x1=r;o.y0=t,o.y1=t+=o.value*l}}var o=(1+Math.sqrt(5))/2;function squarifyRatio(e,n,t,r,i,a){var o=[],u=n.children,c,l,s=0,f=0,h=u.length,p,d,y=n.value,x,v,m,g,w,_,B;while(s<h){p=i-t,d=a-r;do{x=u[f++].value}while(!x&&f<h);v=m=x;_=Math.max(d/p,p/d)/(y*e);B=x*x*_;w=Math.max(m/B,B/v);for(;f<h;++f){x+=l=u[f].value;l<v&&(v=l);l>m&&(m=l);B=x*x*_;g=Math.max(m/B,B/v);if(g>w){x-=l;break}w=g}o.push(c={value:x,dice:p<d,children:u.slice(s,f)});c.dice?treemapDice(c,t,r,i,y?r+=d*x/y:a):treemapSlice(c,t,r,y?t+=p*x/y:i,a);y-=x,s=f}return o}var u=function custom(e){function squarify(n,t,r,i,a){squarifyRatio(e,n,t,r,i,a)}squarify.ratio=function(e){return custom((e=+e)>1?e:1)};return squarify}(o);function index$1(){var e=u,n=false,t=1,r=1,i=[0],a=constantZero,o=constantZero,c=constantZero,l=constantZero,s=constantZero;function treemap(e){e.x0=e.y0=0;e.x1=t;e.y1=r;e.eachBefore(positionNode);i=[0];n&&e.eachBefore(roundNode);return e}function positionNode(n){var t=i[n.depth],r=n.x0+t,u=n.y0+t,f=n.x1-t,h=n.y1-t;f<r&&(r=f=(r+f)/2);h<u&&(u=h=(u+h)/2);n.x0=r;n.y0=u;n.x1=f;n.y1=h;if(n.children){t=i[n.depth+1]=a(n)/2;r+=s(n)-t;u+=o(n)-t;f-=c(n)-t;h-=l(n)-t;f<r&&(r=f=(r+f)/2);h<u&&(u=h=(u+h)/2);e(n,r,u,f,h)}}treemap.round=function(e){return arguments.length?(n=!!e,treemap):n};treemap.size=function(e){return arguments.length?(t=+e[0],r=+e[1],treemap):[t,r]};treemap.tile=function(n){return arguments.length?(e=required(n),treemap):e};treemap.padding=function(e){return arguments.length?treemap.paddingInner(e).paddingOuter(e):treemap.paddingInner()};treemap.paddingInner=function(e){return arguments.length?(a="function"===typeof e?e:constant(+e),treemap):a};treemap.paddingOuter=function(e){return arguments.length?treemap.paddingTop(e).paddingRight(e).paddingBottom(e).paddingLeft(e):treemap.paddingTop()};treemap.paddingTop=function(e){return arguments.length?(o="function"===typeof e?e:constant(+e),treemap):o};treemap.paddingRight=function(e){return arguments.length?(c="function"===typeof e?e:constant(+e),treemap):c};treemap.paddingBottom=function(e){return arguments.length?(l="function"===typeof e?e:constant(+e),treemap):l};treemap.paddingLeft=function(e){return arguments.length?(s="function"===typeof e?e:constant(+e),treemap):s};return treemap}function binary(e,n,t,r,i){var a=e.children,o,u=a.length,c,l=new Array(u+1);for(l[0]=c=o=0;o<u;++o)l[o+1]=c+=a[o].value;partition(0,u,e.value,n,t,r,i);function partition(e,n,t,r,i,o,u){if(e>=n-1){var c=a[e];c.x0=r,c.y0=i;c.x1=o,c.y1=u}else{var s=l[e],f=t/2+s,h=e+1,p=n-1;while(h<p){var d=h+p>>>1;l[d]<f?h=d+1:p=d}f-l[h-1]<l[h]-f&&e+1<h&&--h;var y=l[h]-s,x=t-y;if(o-r>u-i){var v=(r*x+o*y)/t;partition(e,h,y,r,i,v,u);partition(h,n,x,v,i,o,u)}else{var m=(i*x+u*y)/t;partition(e,h,y,r,i,o,m);partition(h,n,x,r,m,o,u)}}}}function sliceDice(e,n,t,r,i){(1&e.depth?treemapSlice:treemapDice)(e,n,t,r,i)}var c=function custom(e){function resquarify(n,t,r,i,a){if((o=n._squarify)&&o.ratio===e){var o,u,c,l,s=-1,f,h=o.length,p=n.value;while(++s<h){u=o[s],c=u.children;for(l=u.value=0,f=c.length;l<f;++l)u.value+=c[l].value;u.dice?treemapDice(u,t,r,i,r+=(a-r)*u.value/p):treemapSlice(u,t,r,t+=(i-t)*u.value/p,a);p-=u.value}}else{n._squarify=o=squarifyRatio(e,n,t,r,i,a);o.ratio=e}}resquarify.ratio=function(e){return custom((e=+e)>1?e:1)};return resquarify}(o);n.cluster=cluster;n.hierarchy=hierarchy;n.pack=index;n.packEnclose=enclose;n.packSiblings=siblings;n.partition=partition;n.stratify=stratify;n.tree=tree;n.treemap=index$1;n.treemapBinary=binary;n.treemapDice=treemapDice;n.treemapResquarify=c;n.treemapSlice=treemapSlice;n.treemapSliceDice=sliceDice;n.treemapSquarify=u;Object.defineProperty(n,"__esModule",{value:true})}));const t=n.cluster,r=n.hierarchy,i=n.pack,a=n.packEnclose,o=n.packSiblings,u=n.partition,c=n.stratify,l=n.tree,s=n.treemap,f=n.treemapBinary,h=n.treemapDice,p=n.treemapResquarify,d=n.treemapSlice,y=n.treemapSliceDice,x=n.treemapSquarify,v=n.__esModule;export default n;export{v as __esModule,t as cluster,r as hierarchy,i as pack,a as packEnclose,o as packSiblings,u as partition,c as stratify,l as tree,s as treemap,f as treemapBinary,h as treemapDice,p as treemapResquarify,d as treemapSlice,y as treemapSliceDice,x as treemapSquarify};

