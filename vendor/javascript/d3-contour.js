import t from"d3-array";var n={};(function(r,e){e(n,t)})(n,(function(t,n){var r=Array.prototype;var e=r.slice;function ascending(t,n){return t-n}function area(t){var n=0,r=t.length,e=t[r-1][1]*t[0][0]-t[r-1][0]*t[0][1];while(++n<r)e+=t[n-1][1]*t[n][0]-t[n-1][0]*t[n][1];return e}function constant(t){return function(){return t}}function contains(t,n){var r=-1,e=n.length,i;while(++r<e)if(i=ringContains(t,n[r]))return i;return 0}function ringContains(t,n){var r=n[0],e=n[1],i=-1;for(var o=0,a=t.length,u=a-1;o<a;u=o++){var h=t[o],s=h[0],c=h[1],f=t[u],d=f[0],l=f[1];if(segmentContains(h,f,n))return 0;c>e!==l>e&&r<(d-s)*(e-c)/(l-c)+s&&(i=-i)}return i}function segmentContains(t,n,r){var e;return collinear(t,n,r)&&within(t[e=+(t[0]===n[0])],r[e],n[e])}function collinear(t,n,r){return(n[0]-t[0])*(r[1]-t[1])===(r[0]-t[0])*(n[1]-t[1])}function within(t,n,r){return t<=n&&n<=r||r<=n&&n<=t}function noop(){}var i=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]];function contours(){var t=1,r=1,o=n.thresholdSturges,a=smoothLinear;function contours(t){var r=o(t);if(Array.isArray(r))r=r.slice().sort(ascending);else{var e=n.extent(t),i=e[0],a=e[1];r=n.tickStep(i,a,r);r=n.range(Math.floor(i/r)*r,Math.floor(a/r)*r,r)}return r.map((function(n){return contour(t,n)}))}function contour(t,n){var r=[],e=[];isorings(t,n,(function(i){a(i,t,n);area(i)>0?r.push([i]):e.push(i)}));e.forEach((function(t){for(var n=0,e=r.length,i;n<e;++n)if(-1!==contains((i=r[n])[0],t)){i.push(t);return}}));return{type:"MultiPolygon",value:n,coordinates:r}}function isorings(n,e,o){var a=new Array,u=new Array,h,s,c,f,d,l;h=s=-1;f=n[0]>=e;i[f<<1].forEach(stitch);while(++h<t-1){c=f,f=n[h+1]>=e;i[c|f<<1].forEach(stitch)}i[f<<0].forEach(stitch);while(++s<r-1){h=-1;f=n[s*t+t]>=e;d=n[s*t]>=e;i[f<<1|d<<2].forEach(stitch);while(++h<t-1){c=f,f=n[s*t+t+h+1]>=e;l=d,d=n[s*t+h+1]>=e;i[c|f<<1|d<<2|l<<3].forEach(stitch)}i[f|d<<3].forEach(stitch)}h=-1;d=n[s*t]>=e;i[d<<2].forEach(stitch);while(++h<t-1){l=d,d=n[s*t+h+1]>=e;i[d<<2|l<<3].forEach(stitch)}i[d<<3].forEach(stitch);function stitch(t){var n=[t[0][0]+h,t[0][1]+s],r=[t[1][0]+h,t[1][1]+s],e=index(n),i=index(r),c,f;if(c=u[e])if(f=a[i]){delete u[c.end];delete a[f.start];if(c===f){c.ring.push(r);o(c.ring)}else a[c.start]=u[f.end]={start:c.start,end:f.end,ring:c.ring.concat(f.ring)}}else{delete u[c.end];c.ring.push(r);u[c.end=i]=c}else if(c=a[i])if(f=u[e]){delete a[c.start];delete u[f.end];if(c===f){c.ring.push(r);o(c.ring)}else a[f.start]=u[c.end]={start:f.start,end:c.end,ring:f.ring.concat(c.ring)}}else{delete a[c.start];c.ring.unshift(n);a[c.start=e]=c}else a[e]=u[i]={start:e,end:i,ring:[n,r]}}}function index(n){return 2*n[0]+n[1]*(t+1)*4}function smoothLinear(n,e,i){n.forEach((function(n){var o=n[0],a=n[1],u=0|o,h=0|a,s,c=e[h*t+u];if(o>0&&o<t&&u===o){s=e[h*t+u-1];n[0]=o+(i-s)/(c-s)-.5}if(a>0&&a<r&&h===a){s=e[(h-1)*t+u];n[1]=a+(i-s)/(c-s)-.5}}))}contours.contour=contour;contours.size=function(n){if(!arguments.length)return[t,r];var e=Math.ceil(n[0]),i=Math.ceil(n[1]);if(!(e>0)||!(i>0))throw new Error("invalid size");return t=e,r=i,contours};contours.thresholds=function(t){return arguments.length?(o="function"===typeof t?t:Array.isArray(t)?constant(e.call(t)):constant(t),contours):o};contours.smooth=function(t){return arguments.length?(a=t?smoothLinear:noop,contours):a===smoothLinear};return contours}function blurX(t,n,r){var e=t.width,i=t.height,o=(r<<1)+1;for(var a=0;a<i;++a)for(var u=0,h=0;u<e+r;++u){u<e&&(h+=t.data[u+a*e]);if(u>=r){u>=o&&(h-=t.data[u-o+a*e]);n.data[u-r+a*e]=h/Math.min(u+1,e-1+o-u,o)}}}function blurY(t,n,r){var e=t.width,i=t.height,o=(r<<1)+1;for(var a=0;a<e;++a)for(var u=0,h=0;u<i+r;++u){u<i&&(h+=t.data[a+u*e]);if(u>=r){u>=o&&(h-=t.data[a+(u-o)*e]);n.data[a+(u-r)*e]=h/Math.min(u+1,i-1+o-u,o)}}}function defaultX(t){return t[0]}function defaultY(t){return t[1]}function defaultWeight(){return 1}function density(){var t=defaultX,r=defaultY,i=defaultWeight,o=960,a=500,u=20,h=2,s=3*u,c=o+2*s>>h,f=a+2*s>>h,d=constant(20);function density(e){var o=new Float32Array(c*f),a=new Float32Array(c*f);e.forEach((function(n,e,a){var u=+t(n,e,a)+s>>h,d=+r(n,e,a)+s>>h,l=+i(n,e,a);u>=0&&u<c&&d>=0&&d<f&&(o[u+d*c]+=l)}));blurX({width:c,height:f,data:o},{width:c,height:f,data:a},u>>h);blurY({width:c,height:f,data:a},{width:c,height:f,data:o},u>>h);blurX({width:c,height:f,data:o},{width:c,height:f,data:a},u>>h);blurY({width:c,height:f,data:a},{width:c,height:f,data:o},u>>h);blurX({width:c,height:f,data:o},{width:c,height:f,data:a},u>>h);blurY({width:c,height:f,data:a},{width:c,height:f,data:o},u>>h);var l=d(o);if(!Array.isArray(l)){var g=n.max(o);l=n.tickStep(0,g,l);l=n.range(0,Math.floor(g/l)*l,l);l.shift()}return contours().thresholds(l).size([c,f])(o).map(transform)}function transform(t){t.value*=Math.pow(2,-2*h);t.coordinates.forEach(transformPolygon);return t}function transformPolygon(t){t.forEach(transformRing)}function transformRing(t){t.forEach(transformPoint)}function transformPoint(t){t[0]=t[0]*Math.pow(2,h)-s;t[1]=t[1]*Math.pow(2,h)-s}function resize(){s=3*u;c=o+2*s>>h;f=a+2*s>>h;return density}density.x=function(n){return arguments.length?(t="function"===typeof n?n:constant(+n),density):t};density.y=function(t){return arguments.length?(r="function"===typeof t?t:constant(+t),density):r};density.weight=function(t){return arguments.length?(i="function"===typeof t?t:constant(+t),density):i};density.size=function(t){if(!arguments.length)return[o,a];var n=Math.ceil(t[0]),r=Math.ceil(t[1]);if(!(n>=0)&&!(n>=0))throw new Error("invalid size");return o=n,a=r,resize()};density.cellSize=function(t){if(!arguments.length)return 1<<h;if(!((t=+t)>=1))throw new Error("invalid cell size");return h=Math.floor(Math.log(t)/Math.LN2),resize()};density.thresholds=function(t){return arguments.length?(d="function"===typeof t?t:Array.isArray(t)?constant(e.call(t)):constant(t),density):d};density.bandwidth=function(t){if(!arguments.length)return Math.sqrt(u*(u+1));if(!((t=+t)>=0))throw new Error("invalid bandwidth");return u=Math.round((Math.sqrt(4*t*t+1)-1)/2),resize()};return density}t.contours=contours;t.contourDensity=density;Object.defineProperty(t,"__esModule",{value:true})}));const r=n.contours,e=n.contourDensity,i=n.__esModule;export default n;export{i as __esModule,e as contourDensity,r as contours};

